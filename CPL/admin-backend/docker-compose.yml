version: '3.9'

services:
  app:
    container_name: admin_dev
    image: admin-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: development
    command: npm run start:debug api
    ports:
      - ${HOST_PORT:-3000}:${SERVER_PORT:-3000}
      - 9229:9229
    networks:
      - admin_server
    volumes:
      - .:/usr/src/app
      - node_modules:/usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - db
      - redis
  # worker:
  #   container_name: admin_worker
  #   image: admin-dev:1.0.0
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #     target: development
  #   command: npm run start:debug worker
  #   networks:
  #     - admin_server
  #   volumes:
  #     - .:/usr/src/app
  #     - node_modules:/usr/src/app/node_modules
  #   restart: unless-stopped
  #   depends_on:
  #     - db
  #     - redis
  # Database
  db:
    container_name: admin_db
    image: mariadb:10.3.36
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    ports:
      - '${ADMINV3_MYSQL_MASTER_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${ADMINV3_MYSQL_MASTER_PASS}
      MYSQL_DATABASE: ${ADMINV3_MYSQL_MASTER_DB}
      MYSQL_USER: ${ADMINV3_MYSQL_MASTER_USER}
      MYSQL_PASSWORD: ${ADMINV3_MYSQL_MASTER_PASS}
    networks:
      - admin_server
  # phpmyadmin:
  #   container_name: admin_phpmyadmin
  #   depends_on:
  #     - db
  #   image: phpmyadmin/phpmyadmin
  #   restart: always
  #   ports:
  #     - '8085:80'
  #   environment:
  #     PMA_HOST: db
  #     MYSQL_ROOT_PASSWORD: ${ADMINV3_MYSQL_MASTER_PASS}
  #   networks:
  #     - admin_server
  redis:
    container_name: admin_redis
    image: redis:7.0.5-alpine
    volumes:
      - redis_data:/data
    ports:
      - '${REDIS_PORT:-6379}:6379'
    command: --port 6379
    restart: unless-stopped
    networks:
      - admin_server
networks:
  admin_server:
volumes:
  db_data:
  redis_data:
  node_modules:
