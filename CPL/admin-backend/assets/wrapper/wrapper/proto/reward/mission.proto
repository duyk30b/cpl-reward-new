syntax = "proto3";

package admin_mission;

service GrpcAdminMissionService {
  rpc Create(CreateMissionRequest) returns (MissionResponse);
  rpc Update(UpdateMissionRequest) returns (MissionResponse);
  rpc FindOne(FindOneMissionRequest) returns (Result);
  rpc GetMissionsByCampaign(FindManyMissionRequest) returns (ListMissionsResponse);
}

message Empty {}

message CreateMissionRequest {
  int32 campaignId = 1;
  string title = 2;
  string titleJa = 3;
  string detailExplain = 4;
  string detailExplainJa = 5;
  optional string guideLink = 6;
  optional string guideLinkJa = 7;
  int32 openingDate = 8; // example: 1642668896
  int32 closingDate = 9;
  int32 priority = 10;
  int32 limitReceivedReward = 11;
  int32 isActive = 12; // default: 1 (ACTIVE) / 0 (INACTIVE)
  int32 status = 13; // default: 1 (RUNNING) / 2 (OUT_OF_BUDGET) / 3 (ENDED) / 4 (COMING_SOON)
  repeated CreateRewardRule rewardRules = 14;
  repeated JudgmentConditions judgmentConditions = 15;
  repeated UserConditions userConditions = 16;
  repeated GrantTarget grantTarget = 17;
  repeated UserConditions displayConditions = 18;
}

message CreateRewardRule {
  string key = 1; // enum('cashback', 'balance', 'dividend')
  string currency = 2; // 'USDT' ....
  string limitValue = 3; // example: 12.443
}

/*
 * user = [user, referer_user]
 * wallet = [
     REWARD_BALANCE, REWARD_CASHBACK,
     REWARD_DIVIDEND, DIRECT_BALANCE,
     DIRECT_CASHBACK, DIRECT_DIVIDEND,
   ]
 */
message GrantTarget {
  string user = 1;
  string amount = 2;
  string currency = 3;
  string wallet = 4;
  repeated int32 tagIds = 5;
  string grantMethod = 6;
  string propertyToCalculateAmount = 7;
}
message UpdateMissionRequest {
  int32 id = 1;
  int32 campaignId = 2;
  string title = 3;
  string titleJa = 4;
  string detailExplain = 5;
  string detailExplainJa = 6;
  optional string guideLink = 7;
  optional string guideLinkJa = 8;
  int32 openingDate = 9; // example: 1642668896
  int32 closingDate = 10;
  int32 priority = 11;
  int32 limitReceivedReward = 12;
  int32 isActive = 13; // default: 1 (ACTIVE) / 0 (INACTIVE)
  int32 status = 14; // default: 1 (RUNNING) / 2 (OUT_OF_BUDGET) / 3 (ENDED) / 4 (COMING_SOON)
  repeated UpdateRewardRule rewardRules = 15;
  repeated JudgmentConditions judgmentConditions = 16;
  repeated UserConditions userConditions = 17;
  repeated GrantTarget grantTarget = 18;
  repeated UserConditions displayConditions = 19;
}
message UpdateRewardRule {
  int32 id = 1;
  string key = 2;
  string currency = 3;
  string limitValue = 4; // example: 12.443
  string releaseValue = 5;
}
message FindOneMissionRequest {
  int32 id = 1;
}

/*
 * eventName = [
      auth_user_login, auth_user_change_email,
      auth_user_created, auth_user_logout,
      auth_user_change_password, auth_user_authenticator_status_updated
   ]
 */
message JudgmentConditions {
  string eventName = 1;
  string property = 2;
  string operator = 3;
  string value = 4;
  string type = 5;
}
message UserConditions {
  string property = 1;
  string operator = 2;
  string value = 3;
  string type = 4;
}

message FindManyMissionRequest {
  string campaignId = 1;
}

message ListMissionsResponse {
  repeated Result missions = 1;
}

message Result {
  int32 id = 1;
  int32 campaignId = 2;
  string title = 3;
  string titleJa = 4;
  string detailExplain = 5;
  string detailExplainJa = 6;
  string guideLink = 7;
  string guideLinkJa = 8;
  int32 openingDate = 9; // example: 1642668896
  int32 closingDate = 10;
  int32 priority = 11;
  int32 limitReceivedReward = 12;
  int32 isActive = 13; // default: 1 (ACTIVE) / 0 (INACTIVE)
  int32 status = 14; // default: 1 (RUNNING) / 2 (OUT_OF_BUDGET) / 3 (ENDED) / 4 (COMING_SOON)
  repeated RewardRuleResult rewardRules = 15;
  repeated JudgmentConditions judgmentConditions = 16;
  repeated UserConditions userConditions = 17;
  repeated GrantTarget grantTarget = 18;
  int32 createdAt = 19;
  int32 updatedAt = 20;
  repeated UserConditions displayConditions = 21;
}

message MissionResponse {
  bool success = 1;
  string message = 2;
  Result mission = 3;
}

message RewardRuleResult {
  int32 createdAt = 1;
  int32 updatedAt = 2;
  int32 id = 3;
  string key = 4;
  string currency = 5;
  string limitValue = 6; // example: 12.443
  string releaseValue = 7; // example: 12.443
}
