syntax = "proto3";

package user;

import "common.proto";
import "google/protobuf/empty.proto";

service UserService {
  rpc SearchByFilter(UserFilter) returns (UserList);
  rpc GetListUserForManagement(UserFilterForManagement) returns (ListUserForManagement);
  rpc GetListUserForMarketing(UserFilterMarketingRequest) returns (ListUserForMarketingResponse);
  rpc FindOne (UserById) returns (User);
  rpc FindByIds (UserByIds) returns (UserList);
  rpc FindByEmails (UserByEmails) returns (UserList);
  rpc FindByEmail (UserByEmail) returns (UserResponse);
  rpc BanUser (BanUser) returns (common.PostResponse);
  rpc UnbanUser (UnbanUser) returns (common.PostResponse);
  rpc DeleteUser (UserById) returns (ResponseString);
  rpc GetUsersExport (ExportType) returns (UsersExportResponse);
  rpc CreateUsersExport (UserFilterForManagement) returns (CreateUsersExportResponse);
  rpc CreateUserMarketingExport (UserFilterMarketingRequest) returns (CreateUsersExportResponse);
  rpc ResetAuthenticator (UserById) returns (common.PostResponse);
  rpc ChangeEmail (ChangeEmailRequest) returns (common.PostResponse);

  //* Hot wallet
  rpc GetListUserForHotWallet(UserFilterHotWallet) returns(ListUserForHotWallet);

  rpc CreateBot (CreateBotRequest) returns (CreateBotResponse);

  rpc ValidateAuthenticatorOtp(ValidateAuthenticatorOtpRequest) returns (ValidateAuthenticatorOtpResponse);
};


message ResponseString {
  string response = 1;
}

message UserFilterForManagement {
  int32 page = 1;
  int32 per_page = 2;
  int32 is_banned = 3;
  string search_field = 4;
  string search_text = 5;
  string account_lv = 6;
  string risk_rating = 7;
  string registered_channel = 8;
  string sort = 9;
  string sort_type = 10;
  int32 kyc_status = 11;
  int32 kyc_type = 12;
  string level_status = 13;
  int32 account_status = 14;
  int32 type = 15;
};

message UserFilterMarketingRequest {
  uint32 page = 1;
  uint32 per_page = 2;
  string search_field = 3;
  string search_text = 4;
  string referral_email = 5;
  string account_lv = 6;
  string risk_rating = 7;
  string registered_channel = 8;
  repeated string tag_ids = 9;
  string sort = 10;
  string sort_type = 11;
  string start_register_date = 12;
  string end_register_date = 13;
  string from_date = 14;
  string to_date = 15;
};


message UserById {
  string id = 1;
};

message UserByIds {
  repeated string ids = 1;
};

message UserByEmails {
  repeated string emails = 1;
};

message UserByEmail {
  string email = 1;
};

message BanUser {
  string id = 1;
  string note = 2;
  int32 hour = 3;
};

message UnbanUser {
  string id = 1;
};

message User {
  string id = 1;
  string uuid = 2;
  string name = 3;
  string email = 6;
  string type = 7;
  string status = 11;
  string referrer_code = 13;
  string referred_by_id = 14;
  string fb_id = 15;
  string gg_id = 16;
  string checkpoint = 17;
  string last_login = 18;
  string phone_verify_at = 19;
  string email_verify_at = 20;
  string authenticator_verify_at = 21;
  string created_at = 22;
  string updated_at = 23;
  string bce_updated_at = 24;
  string email_verify_status = 25;
  string authenticator_verify_status = 26;
  string kyc_verify_status = 27;
  string user_info_status = 28;
  string last_password_change = 29;
  string account_lv = 30;
  string apple_id = 31;
  int32 channel_id = 32;
  int32 is_banned = 33;
  string dynamic_link = 34;
}

message UserList {
  repeated User data = 1;
  common.PaginationMeta pagination = 2;
}

message UserForManagement {
  string user_id = 1;
  string full_name = 2;
  string email = 3;
  string authenticator_verify_status = 4;
  string user_info_status = 5;
  string account_lv = 6;
  string last_login = 7;
  string created_at = 8;
  string risk_rating = 9;
  string kyc_status = 10;
  string referral_email = 11;
  int32 is_banned = 12;
  int32 kyc_type = 13;
  string level_status = 14;
  int32 social_link = 15;
  string registered_channel = 16;
  string gg_id = 17;
  string fb_id = 18;
  string apple_id = 19;
  string kyc_submitted_date = 20;
  string referral_gg_id = 21;
  string referral_fb_id = 22;
  string referral_apple_id = 23;
  int32 account_status = 24;
  int32 type = 25;
}

message ListUserForManagement {
  repeated UserForManagement data = 1;
  common.PaginationMeta pagination = 2;
}


message UserForMarketing {
  string user_id = 1;
  string full_name = 2;
  string email = 3;
  string account_lv = 4;
  string created_at = 5;
  string risk_rating = 6;
  string referral_email = 7;
  int32 social_link = 8;
  string channel_name = 9;
  repeated string tags = 10;
}

message ListUserForMarketingResponse {
  repeated UserForMarketing data = 1;
  common.PaginationMeta pagination = 2;
}

message UsersExport {
  bool is_empty = 1;
  int32 status = 2;
  string link = 3;
  string created_at = 4;
  string finished_at = 5;
}

message UsersExportResponse {
  string status = 1;
  string message = 2;
  UsersExport data = 3;
}

message SuccessResponse {
  bool success = 1;
}

message CreateUsersExportResponse {
  string status = 1;
  string message = 2;
  SuccessResponse data = 3;
}

message ExportType {
  string type = 1;
}


message UserFilterHotWallet {
  int32 page = 1;
  int32 per_page = 2;
  string keyword = 3;
  repeated int32 user_ids = 4;
  repeated int32 not_user_ids = 5;
}

message UserForHotWallet {
  int32 user_id = 1;
  string email = 2;
}

message ListUserForHotWallet {
  repeated UserForHotWallet data = 1;
  common.PaginationMeta pagination = 2;
}

message CreateBotRequest {
  string email = 1;
}

message CreateBotResponse {
  bool success = 1;
  string message = 2;
  User data = 3;
}

message UserFilter {
  int32 page = 1;
  int32 limit = 2;
  repeated string ids = 3;
  int32 type = 4;
  repeated int32 statuses = 5;
  repeated int32 kyc_verify_statuses = 6;
  repeated int32 authenticator_verify_statuses = 7;
  repeated int32 user_info_statuses = 8;
  int32 account_lv_from = 9;
  int32 account_lv_to = 10;
  string created_at_from = 11;
  string created_at_to = 12;
  string last_login_from = 13;
  string last_login_to = 14;
  string email = 15; 
  string sort = 16;
  string sort_type = 17;
};

message ValidateAuthenticatorOtpRequest {
  string user_id = 1;
  string otp = 2;
}

message ValidateAuthenticatorOtpResponse {
  bool result = 1;
  string message = 2;
}

message ChangeEmailRequest {
  string user_id = 1;
  string email = 2;
}

message UserResponse {
  User data = 1;
}
