version: '3.9'

networks:
  server:
volumes:
  db_data:
  redis_data:

services:
  db:
    container_name: reward_db
    image: mariadb:10.3.36
    restart: unless-stopped
    networks:
      - server
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE:-reward}
      MARIADB_USER: ${MARIADB_USERNAME:-username}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD:-password}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-abcd1234}
    ports:
      - ${DB_HOST_PORT:-8390}:3306

  redis:
    container_name: reward_redis
    image: redis:7.0.5-alpine
    restart: unless-stopped
    networks:
      - server
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_HOST_PORT:-8391}:6379
      
  api-public:
    container_name: reward_api-public
    image: cpl-reward:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
    volumes:
      - .:/usr/src/app
    command: npm run start:dev api-public
    ports:
      - ${API_HOST_PORT:-8300}:${API_CONTAINER_PORT:-3000}

  api-internal:
    container_name: reward_api-internal
    image: cpl-reward:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
    volumes:
      - .:/usr/src/app
    command: npm run start:dev api-internal
    ports:
      - ${API_INTERNAL_HOST_PORT:-8303}:${API_CONTAINER_PORT:-3000}

  grpc-internal:
    container_name: reward_grpc-internal
    image: cpl-reward:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
    volumes:
      - .:/usr/src/app
    command: npm run start:dev grpc-internal
    ports:
      - ${GRPC_HOST_PORT:-8301}:${GRPC_CONTAINER_PORT:-5000}

  event-dispatcher: 
    container_name: reward_event-dispatcher
    image: cpl-reward:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - server
    volumes:
      - .:/usr/src/app
    command: npm run start:dev event-dispatcher

  worker:
    container_name: reward_worker
    image: cpl-reward:1.0.0
    build: 
      context: .
      dockerfile: ./Dockerfile.local
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - server
    volumes:
      - .:/usr/src/app
    command: npm run start:dev worker


#  zookeeper:
#    container_name: reward_zookeeper
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - "2181:2181"
#    restart: unless-stopped
#    networks:
#      - server
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    container_name: reward_kafka
#    image: 'bitnami/kafka:latest'
#    ports:
#      - "9093:9093"
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
#    restart: unless-stopped
#    depends_on:
#      - zookeeper
#    networks:
#      - server
