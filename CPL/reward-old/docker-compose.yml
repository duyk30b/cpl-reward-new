version: '3.9'

services:
  app:
    container_name: reward_app
    image: reward-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: builder
    command: npm run start:dev
    ports:
      - ${APP_MAP_PORT}
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
  admin:
    container_name: reward_admin
    image: reward-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: builder
    command: npm run start:dev admin
    ports:
      - ${ADMIN_KAFKA_MAP_PORT}
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
  missions:
    container_name: reward_missions
    image: reward-api-dev:1.0.0
    build:
      context: .
      dockerfile: ./Dockerfile
      target: builder
    command: npm run start:dev missions
    #    ports:
    #      - ${MISSIONS_MAP_PORT}
    volumes:
      - .:/usr/src/app
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - server
  db:
    container_name: reward_db
    image: mariadb:latest
    volumes:
      - db_data:/var/lib/mysql
    restart: unless-stopped
    ports:
      - ${REWARD_MYSQL_MAP_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${REWARD_MYSQL_MASTER_PASS}
      MYSQL_DATABASE: ${REWARD_MYSQL_MASTER_DB}
      MYSQL_USER: ${REWARD_MYSQL_MASTER_USER}
      MYSQL_PASSWORD: ${REWARD_MYSQL_MASTER_PASS}
    networks:
      - server
  redis:
    container_name: reward_redis
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - ${REDIS_MAP_PORT}
    restart: unless-stopped
    networks:
      - server
#  zookeeper:
#    container_name: reward_zookeeper
#    image: 'bitnami/zookeeper:latest'
#    ports:
#      - "2181:2181"
#    restart: unless-stopped
#    networks:
#      - server
#    environment:
#      - ALLOW_ANONYMOUS_LOGIN=yes
#  kafka:
#    container_name: reward_kafka
#    image: 'bitnami/kafka:latest'
#    ports:
#      - "9093:9093"
#    environment:
#      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#      - ALLOW_PLAINTEXT_LISTENER=yes
#      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
#      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
#    restart: unless-stopped
#    depends_on:
#      - zookeeper
#    networks:
#      - server
networks:
  server:
volumes:
  db_data:
  redis_data:
